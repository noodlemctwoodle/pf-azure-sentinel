# 05-apps.conf
################################################################################
# Version: 21.03                                                               #
# Required: Yes                                                                #
# Description: Parses events based on process.name and further enriches events #
#                                                                              #
################################################################################
#
filter {
  ### captive portal ###
  # Rename pfSense captive portal log from logportalauth to captiveportal
  if [process][name] =~ /^logportalauth/ {
    mutate {
      replace => { "[process][name]" => "captiveportal" }
    }
  }
  if [process][name] =~ /^captiveportal/ {
    mutate {
      add_tag => [ "captive" ]
      add_field => { "[ecs][version]" => "1.7.0" }
      add_field => { "[event][dataset]" => "pfAzSentinel.captive" }
      rename => { "filter_message" => "captiveportalmessage" }
    }
    grok {
      patterns_dir => [ "/etc/logstash/conf.d/patterns" ]
      match => [ "captiveportalmessage", "%{CAPTIVEPORTAL}" ]
    }
  }
  ### dhcpd ###
  if [process][name] =~ /^dhcpd$/ {
    mutate {
      add_tag => [ "dhcp", "dhcpdv4", "firewall" ]
      add_field => { "[event][dataset]" => "pfAzSentinel.dhcp" }
    }
    grok {
      patterns_dir => [ "/etc/logstash/conf.d/patterns" ]
      match => [ "filter_message", "%{DHCPD}"]
    }
  }
  ### dhcp6 ###
  if [process][name] =~ /^dhcp6c/ {
    mutate {
      add_tag => [ "dhcp", "dhcpdv6", "firewall" ]
      add_field => { "[event][dataset]" => "pfAzSentinel.dhcp" }
    }
    grok {
      patterns_dir => ["/etc/logstash/conf.d/patterns" ]
      match => [ "filter_message", "%{DHCPDv6}" ]
    }
  }
  ### dpinger ###
  if [process][name] =~ /^dpinger/ {
    mutate {
      add_tag => [ "dpinger", "firewall" ]
      add_field => { "[event][dataset]" => "pfAzSentinel.dpinger" }
    }
  }
  ### filterlog ###
  if [process][name] =~ /^filterlog$/ {
    mutate {
      add_tag => [ "firewall" ]
      add_field => { "[ecs][version]" => "1.7.0" }
      add_field => { "[event][dataset]" => "pfAzSentinel.firewall" }
    }
    grok {
      patterns_dir => [ "/etc/logstash/conf.d/patterns" ]
      match => [ "filter_message", "%{PF_LOG_ENTRY}" ]
    }
  }
  ### haproxy ###
  if [process][name] =~ /^haproxy/ {
    mutate {
      add_tag => [ "haproxy" ]
      add_field => { "[event][dataset]" => "pfAzSentinel.haproxy" }
    }
    grok {
      patterns_dir => [ "/etc/logstash/conf.d/patterns" ]
      match => [ "filter_message", "%{HAPROXY}" ]
    }
  }  
  ### openvpn ###
  if [process][name] =~ /^openvpn/ {
    mutate {
      add_tag => [ "openvpn", " firewall" ]
      add_field => { "[event][dataset]" => "pfAzSentinel.openvpn" }
    }
    grok {
      patterns_dir => [ "/etc/logstash/conf.d/patterns" ]
      match => [ "filter_message", "%{OPENVPN}" ]
    }
    if [openvpn_message] {
      grok {
        patterns_dir => [ "/etc/logstash/conf.d/patterns" ]
        match => [ "openvpn_message", "%{OPENVPN_RAW}" ]
      }
    }
  }
  ### named ###
  if [process][name] =~ /^named/ {
    mutate {
      add_tag => [ "bind9", "firewall" ]
      add_field => { "[event][dataset]" => "pfAzSentinel.bind9" }
    }
    grok {
     #patterns_dir => [ "/etc/logstash/conf.d/patterns" ]
     match => [ "filter_message", "%{BIND9}" ]
    }
  }
  ### ntpd ###
  if [process][name] =~ /^ntpd/ {
    mutate {
      add_tag => [ "ntpd", "firewall" ]
      add_field => { "[event][dataset]" => "pfAzSentinel.ntpd" }
    }
  }
  ### php-fpm ###
  if [process][name] =~ /^php-fpm/ {
    mutate {
      add_tag => [ "web_portal", "firewall" ]
      add_field => { "[event][dataset]" => "pfAzSentinel.webportal" }
    }
    grok {
      patterns_dir => [ "/etc/logstash/conf.d/patterns" ]
      match => { "filter_message" => [ "%{PF_APP}", "%{PF_APP_DATA}" ] }
    }
    mutate {
      lowercase => [ 'pf_ACTION' ]
    }
  }
  ### snort ###
  if [process][name] =~ /^snort/ {
    mutate {
      add_tag => [ "snort" ]
      add_field => { "[ecs][version]" => "1.7.0" }
      add_field => { "[event][dataset]" => "pfAzSentinel.snort" }
      add_field => { "[event][category]" => "intrusion_detection" }
      add_field => { "[agent][type]" => "snort" }
    }
    grok {
      patterns_dir => [ "/etc/logstash/conf.d/patterns" ]
      match => [ "filter_message", "%{SNORT}" ]
    }
  }
  ### suricata ###
  if [process][name] =~ /^suricata$/ {
    if [filter_message] =~ /^{.*}$/ {
      json {
        source => "filter_message"
        target => "[suricata][eve]"
        add_tag => "suricata_json"
      }
    }
    if [suricata][eve][src_ip] and ![source][ip] {
      mutate {
        add_field => { "[source][ip]" => "%{[suricata][eve][src_ip]}" }
      }
    }
    if [suricata][eve][dest_ip] and ![destination][ip] {
      mutate {
        add_field => { "[destination][ip]" => "%{[suricata][eve][dest_ip]}" }
      }
    }
    if [suricata][eve][src_port] and ![source][port] {
      mutate {
        add_field => { "[source][port]" => "%{[suricata][eve][src_port]}" }
      }
    }
    if [suricata][eve][dest_port] and ![destination][port] {
      mutate {
        add_field => { "[destination][port]" => "%{[suricata][eve][dest_port]}" }
      }
    }
    if "suricata_json" not in [tags] {
      grok {
        patterns_dir => [ "/etc/logstash/conf.d/patterns" ]
        match => [ "filter_message", "%{SURICATA}" ]
      }
    }
    mutate {
      remove_tag => "suricata_json"
      add_tag => "suricata"
      add_field => { "[event][dataset]" => "pfAzSentinel.suricata" }
    }
  }
  ### squid ###
  if [process][name] == "(squid-1)" {
    mutate {
      replace => [ "[process][name]", "squid" ]
      add_field => { "[event][dataset]" => "pfAzSentinel.squid" }
    }
    if [filter_message] =~ /^{.*}$/ {
      json {
        source => "filter_message"
        add_tag => "squid_json"
      }
    }
    if "squid_json" not in [tags] {
      grok {
        patterns_dir => [ "/etc/logstash/conf.d/patterns" ]
        match => [ "filter_message", "%{SQUID}" ]
      }  
    }    
  ### squid ECS => Built-in SIEM JSON ###
    if "squid_json" in [tags] {
      grok {
        match => [ "[url][original]", "%{URIPROTO}://%{URIHOST:referer_domain}%{GREEDYDATA:[url][path]}" ]
      }
      mutate {
        rename => { "[http][response][body][status_code]" => "[http][response][status_code]" }
        rename => { "referer_domain" => "[url][domain]" }
      }
    }
    mutate {
      rename => { "[host][hostname]" => "[client][ip]" }
      remove_tag => "squid_json"
      add_tag => "squid"
    }
  }
  ### unbound ###
  if [process][name] =~ /^unbound/ {
    mutate {
      add_tag => "unbound"
      add_field => { "[ecs][version]" => "1.7.0" }
      add_field => { "[event][dataset]" => "pfAzSentinel.unbound" }
    }
    grok {
      patterns_dir => [ "/etc/logstash/conf.d/patterns" ]
      match => [ "filter_message", "%{UNBOUND}" ]
    }
  ### unbound ECS => Built-in SIEM ###
    grok { 
      match => [ "[dns][question][name]", "(\.)?(?<[dns][question][registered_domain]>[^.]+\.[^.]+)$" ] 
      add_tag => "unbound-registered_domain"
    }
    if "unbound-registered_domain" not in [tags] {
      grok { 
        match => [ "[dns][question][name]", "(?<[dns][question][registered_domain]>[^.]+\.[^.]+)$" ] 
      }
    }
    mutate {
      remove_tag => "unbound-registered_domain"
    }
  }
}
