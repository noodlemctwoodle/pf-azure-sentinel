# 37-enhanced_user_agent.conf
################################################################################
# Version: 21.02                                                               #
# Required: No - Optional                                                      #
# Description: enriches user_agent.original field for suricata/squid logs      #
#                                                                              #
################################################################################
#
filter {
  if [user_agent][original] {
    ruby {
      code => "
        http_useragent = event.get('[user_agent][original]')
        event.set('[user_agent][meta][total_length]', http_useragent.length)
      "
      tag_on_exception => "_rubyexception-all-http_user_agent_parsing"
    }
    useragent {
      source => "[user_agent][original]"
      target => "user_agent"
      # Add field if successful for checking later
      add_field => { "[@metadata][ua_parse]" => "true" }
    }
    # UA to new ECS
    if [@metadata][ua_parse] == "true" {
      if [user_agent][os_major] and [user_agent][os_minor] and [user_agent][patch] {
        mutate {
          convert => {
            "[user_agent][os_major]" => "string"
            "[user_agent][os_minor]" => "string"
            "[user_agent][patch]" => "string"
          }
          remove_field => ["[user_agent][os][version]"]
        }
#        mutate {
#          add_field => {
#            "[user_agent][os][version]" => "%{[user_agent][os_major]}.%{[user_agent][os_minor]}-%{[user_agent][patch]}"
#          }
#        }
      }
      mutate {
        rename => {
          "[user_agent][os]" => "[user_agent][os][full]"
          "[user_agent][os_name]" => "[user_agent][os][name]"
          "[user_agent][device]" => "[user_agent][device][name]"
        }
        remove_field => ["[user_agent][os][major]"]
        remove_field => ["[user_agent][os][minor]"]
        remove_field => ["[user_agent][patch]"]
      }
    }
  }
}
